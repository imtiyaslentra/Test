local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local BallFolder = Workspace:WaitForChild("Balls")

local player = Players.LocalPlayer
local canParry = true

-- Membuat ScreenGui dan TextLabel untuk debug
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
local debugLabel = Instance.new("TextLabel", screenGui)

-- Konfigurasi TextLabel
debugLabel.Size = UDim2.new(0, 300, 0, 150)  -- Ukuran yang lebih kecil untuk menghindari gangguan
debugLabel.Position = UDim2.new(0.5, -150, 0, 10)
debugLabel.BackgroundTransparency = 0.5
debugLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
debugLabel.Font = Enum.Font.Gotham
debugLabel.TextSize = 14  -- Ukuran teks lebih kecil
debugLabel.TextWrapped = true
debugLabel.Text = "[DEBUG] Waiting for balls..."

local function calculatePredictionTime(ball, player)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local relativePosition = ball.Position - rootPart.Position
            local relativeVelocity = ball.Velocity
            local a = ball.Size.Magnitude / 1
            local b = relativePosition.Magnitude
            local c = math.sqrt(a * a + b * b)

            -- Memperhitungkan kecepatan bola dan jarak untuk memperbaiki prediksi
            local speedFactor = relativeVelocity.Magnitude > 0 and (1 / relativeVelocity.Magnitude) or 1
            return (c - a) * speedFactor
        end
    end
    return math.huge
end

local function parry()
    if canParry then
        canParry = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        task.delay(0.1, function()
            canParry = true
        end)
        debugLabel.Text = "[OUTPUT] Parry executed!" -- Menampilkan di layar
    end
end

local function checkProximityToPlayer(ball, player)
    local predictionTime = calculatePredictionTime(ball, player)
    local realBallAttribute = ball:GetAttribute("realBall")
    local target = ball:GetAttribute("target")

    if predictionTime and realBallAttribute and target then
        -- Mengatur threshold kecepatan berdasarkan kecepatan bola
        local ballSpeedThreshold = math.max(0.4, 0.6 - ball.Velocity.Magnitude * 0.03)
        local accuracyThreshold = predictionTime <= ballSpeedThreshold

        if accuracyThreshold and target == player.Name then
            parry()
            return true
        end
    end
    return false
end

local function getBallData(ball)
    local character = player.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local distance = (ball.Position - rootPart.Position).Magnitude
            local speed = ball.Velocity.Magnitude

            -- Menentukan apakah bola tiba-tiba berhenti, mempercepat, berputar, atau curve tajam
            local suddenStopped = speed < 1 -- Threshold untuk menentukan "berhenti"
            local suddenlySpeedingUp = speed > 20 -- Threshold untuk menentukan "mempercepat"
            local ballCurvingSharp = ball.Velocity.Y > 5  -- Threshold untuk menentukan "curve tajam"
            local ballSuddenlySpinning = ball.Velocity.Magnitude > 15 and ball.AssemblyLinearVelocity.Y > 10 -- Threshold untuk menentukan "tiba-tiba berputar"
            
            return {
                target = ball:GetAttribute("target"),
                speed = speed,
                distance = distance,
                suddenlyStopped = suddenStopped,
                suddenlySpeedingUp = suddenlySpeedingUp,
                ballCurvingSharp = ballCurvingSharp,
                ballSuddenlySpinning = ballSuddenlySpinning
            }
        end
    end
    return nil
end

local function checkBallsProximity()
    local ballsData = {}
    local parryExecuted = false
    if player and player.Character then
        for _, ball in ipairs(BallFolder:GetChildren()) do
            if ball:IsA("BasePart") then
                local ballData = getBallData(ball)
                if ballData then
                    table.insert(ballsData, ballData)
                    parryExecuted = parryExecuted or checkProximityToPlayer(ball, player)
                end
            end
        end
    end

    return ballsData, parryExecuted
end

RunService.Heartbeat:Connect(function()
    local ballsData, parryExecuted = checkBallsProximity()
    
    -- Menyusun teks untuk ditampilkan
    local debugText = "[DEBUG] Balls found: " .. #ballsData .. "\n"
    for _, data in ipairs(ballsData) do
        debugText = debugText .. string.format("Target: %s, Speed: %.2f, Distance: %.2f, Stopped: %s, Speeding Up: %s, Curving: %s, Spinning: %s\n",
            data.target, data.speed, data.distance,
            tostring(data.suddenlyStopped), tostring(data.suddenlySpeedingUp),
            tostring(data.ballCurvingSharp), tostring(data.ballSuddenlySpinning))
    end
    debugText = debugText .. "[OUTPUT] Parry: " .. tostring(parryExecuted)
    debugLabel.Text = debugText
end)
